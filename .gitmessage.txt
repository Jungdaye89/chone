# <타입>: <변경 요약>
# 예: Feat: 기존 인증 방식 제거

# <본문 - 상세 설명>
# 무엇을 변경했는지 설명합니다.
# 예: 다크 모드를 활성화할 수 있는 토글 버튼을 추가했습니다.
#
# 변경한 이유나 배경을 설명합니다.
# 예: 사용자가 더 나은 접근성을 위해 저조도 환경에서도 편리하게 사용할 수 있도록
#     다크 모드 기능을 추가하였습니다.
# - UI 설정에서 라이트와 다크 테마를 전환할 수 있습니다.
# - 다크 테마는 기본적으로 환경 설정에 맞춰 자동 전환됩니다.

# <푸터 - 관련 정보>
# 예: Resolved #123

# ------------- 아래 내용을 참고하여 작성하세요 -------------
#   커밋 유형     의미
#  -----------------------------------------------------
#  `Feat`       새로운 기능 추가
#  `Fix`        버그 수정
#  `Docs`       문서 수정
#  `Style`      코드 formatting, 세미콜론 누락, 코드 자체의 변경이 없는 경우
#  `Refactor`   코드 리팩토링
#  `Update`     기능 수정(정책 변경에 따른 수정 등)
#  `Test`       테스트 코드, 리팩토링 테스트 코드 추가
#  `Chore`      패키지 매니저 수정, 그 외 기타 수정 ex) .gitignore 파일 또는 폴더 명을 수정하거나 옮기는 작업만인 경우
#  `Remove`     파일을 삭제하는 작업만 수행한 경우

# <변경 요약(제목)>
# 타입 뒤에는 반드시 : (콜론+공백)이 필요하며, 이후 설명을 작성
# 간결하고 명확하게 변경 사항을 한 줄로 설명합니다 (50자 이내).
# 끝에 마침표(.)를 금지합니다.
# 예: `feat: 다크 모드 추가` / `fix(auth): 로그인 오류 수정`

# <본문>
# 제목과 본문을 빈행으로 분리.
# 본문에는 무엇을 변경했는지, 왜 변경했는지 작성합니다.
# 각 줄은 72자 이내로 작성하며, 부연 설명은 "-"로 구분합니다.

# <푸터>
# 본문과 푸터는 한 줄을 띄워 분리합니다.
# 관련 이슈 번호나 브레이킹 체인지를 작성합니다.
# 예: `Resolves: #123`